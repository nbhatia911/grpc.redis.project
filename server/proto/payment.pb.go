// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payment.proto

/*
Package payment is a generated protocol buffer package.

It is generated from these files:
	payment.proto

It has these top-level messages:
	PaymentRequest
	PaymentReply
	Void
*/
package payment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// request message containing the user's name.
type PaymentRequest struct {
	Username      string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (m *PaymentRequest) Reset()                    { *m = PaymentRequest{} }
func (m *PaymentRequest) String() string            { return proto.CompactTextString(m) }
func (*PaymentRequest) ProtoMessage()               {}
func (*PaymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PaymentRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *PaymentRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

// response message containing details for payment
type PaymentReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PaymentReply) Reset()                    { *m = PaymentReply{} }
func (m *PaymentReply) String() string            { return proto.CompactTextString(m) }
func (*PaymentReply) ProtoMessage()               {}
func (*PaymentReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PaymentReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// return type is mandatory hence need to define void
type Void struct {
}

func (m *Void) Reset()                    { *m = Void{} }
func (m *Void) String() string            { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()               {}
func (*Void) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*PaymentRequest)(nil), "payment.PaymentRequest")
	proto.RegisterType((*PaymentReply)(nil), "payment.PaymentReply")
	proto.RegisterType((*Void)(nil), "payment.Void")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PaymentService service

type PaymentServiceClient interface {
	SendPayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*Void, error)
	GetPayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*PaymentReply, error)
}

type paymentServiceClient struct {
	cc *grpc.ClientConn
}

func NewPaymentServiceClient(cc *grpc.ClientConn) PaymentServiceClient {
	return &paymentServiceClient{cc}
}

func (c *paymentServiceClient) SendPayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := grpc.Invoke(ctx, "/payment.PaymentService/SendPayment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) GetPayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*PaymentReply, error) {
	out := new(PaymentReply)
	err := grpc.Invoke(ctx, "/payment.PaymentService/GetPayment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PaymentService service

type PaymentServiceServer interface {
	SendPayment(context.Context, *PaymentRequest) (*Void, error)
	GetPayment(context.Context, *PaymentRequest) (*PaymentReply, error)
}

func RegisterPaymentServiceServer(s *grpc.Server, srv PaymentServiceServer) {
	s.RegisterService(&_PaymentService_serviceDesc, srv)
}

func _PaymentService_SendPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).SendPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentService/SendPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).SendPayment(ctx, req.(*PaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentService_GetPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).GetPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payment.PaymentService/GetPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).GetPayment(ctx, req.(*PaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payment.PaymentService",
	HandlerType: (*PaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendPayment",
			Handler:    _PaymentService_SendPayment_Handler,
		},
		{
			MethodName: "GetPayment",
			Handler:    _PaymentService_GetPayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payment.proto",
}

func init() { proto.RegisterFile("payment.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x48, 0xac, 0xcc,
	0x4d, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x82, 0xb9,
	0xf8, 0x02, 0x20, 0xcc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x29, 0x2e, 0x8e, 0xd2,
	0xe2, 0xd4, 0xa2, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x38, 0x5f,
	0x48, 0x95, 0x8b, 0xaf, 0xa4, 0x28, 0x31, 0xaf, 0x38, 0x31, 0xb9, 0x24, 0x33, 0x3f, 0x2f, 0x3e,
	0x33, 0x45, 0x82, 0x09, 0xac, 0x82, 0x17, 0x49, 0xd4, 0x33, 0x45, 0x49, 0x83, 0x8b, 0x07, 0x6e,
	0x68, 0x41, 0x4e, 0xa5, 0x90, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x71, 0x71, 0x62, 0x3a, 0xcc, 0x44,
	0x18, 0x57, 0x89, 0x8d, 0x8b, 0x25, 0x2c, 0x3f, 0x33, 0xc5, 0xa8, 0x93, 0x11, 0xee, 0x8e, 0xe0,
	0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x73, 0x2e, 0xee, 0xe0, 0xd4, 0xbc, 0x14, 0xa8, 0xa8,
	0x90, 0xb8, 0x1e, 0xcc, 0x07, 0xa8, 0xee, 0x95, 0xe2, 0x85, 0x4b, 0x80, 0x4c, 0x52, 0x62, 0x10,
	0xb2, 0xe3, 0xe2, 0x72, 0x4f, 0x2d, 0x21, 0xa8, 0x4f, 0x14, 0x53, 0xa2, 0x20, 0xa7, 0x52, 0x89,
	0xc1, 0x49, 0x91, 0x8b, 0x3f, 0x33, 0x5f, 0x2f, 0xbd, 0xa8, 0x20, 0x19, 0xa6, 0xc2, 0x09, 0xe6,
	0x9d, 0x00, 0x50, 0xe0, 0x05, 0x30, 0x26, 0xb1, 0x81, 0x43, 0xd1, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0xa9, 0xcc, 0xef, 0xbe, 0x56, 0x01, 0x00, 0x00,
}
