# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import payment_pb2 as payment__pb2


class PaymentServiceStub(object):
  """payment service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendPayment = channel.unary_unary(
        '/payment.PaymentService/SendPayment',
        request_serializer=payment__pb2.PaymentRequest.SerializeToString,
        response_deserializer=payment__pb2.Void.FromString,
        )
    self.GetPayment = channel.unary_unary(
        '/payment.PaymentService/GetPayment',
        request_serializer=payment__pb2.PaymentRequest.SerializeToString,
        response_deserializer=payment__pb2.PaymentReply.FromString,
        )


class PaymentServiceServicer(object):
  """payment service definition.
  """

  def SendPayment(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPayment(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PaymentServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendPayment': grpc.unary_unary_rpc_method_handler(
          servicer.SendPayment,
          request_deserializer=payment__pb2.PaymentRequest.FromString,
          response_serializer=payment__pb2.Void.SerializeToString,
      ),
      'GetPayment': grpc.unary_unary_rpc_method_handler(
          servicer.GetPayment,
          request_deserializer=payment__pb2.PaymentRequest.FromString,
          response_serializer=payment__pb2.PaymentReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'payment.PaymentService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
